{"version":3,"sources":["apollo.js","routes/Detail.js","components/Movie.js","routes/Home.js","components/App.js","index.js"],"names":["client","ApolloClient","uri","GET_MOVIE","gql","id","useParams","useQuery","variables","loading","data","className","style","backgroundImage","marginBottom","fontSize","movie","title","language","rating","class","description_intro","width","height","medium_cover_image","backgroundSize","backgroundPosition","borderRadius","Movie","to","GET_MOVIES","marginTop","movies","position","top","map","key","App","exact","path","component","Home","Detail","ReactDOM","render","document","getElementById"],"mappings":"oNAMeA,EAJA,IAAIC,IAAa,CAC9BC,IAAK,2B,2RCEP,IAAMC,EAAYC,YAAH,KAcA,aAAO,IACZC,EAAOC,cAAPD,GADW,EAEOE,YAASJ,EAAW,CAAEK,UAAW,CAAEH,QAArDI,EAFW,EAEXA,QAASC,EAFE,EAEFA,KACjB,OACE,yBACEC,UAAU,qBACVC,MAAO,CACLC,gBAAiB,+CAGnB,yBAAKF,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wBACb,wBACEA,UAAU,uBACVC,MAAO,CAAEE,aAAc,GAAIC,SAAU,KAEpCN,EAAU,aAAeC,EAAKM,MAAMC,QAErCR,GACA,6BACE,wBAAIE,UAAU,qCACXD,EAAKM,MAAME,SADd,SAC2BR,EAAKM,MAAMG,OADtC,gBAGA,wBAAIC,MAAM,mEACPV,EAAKM,MAAMK,sBAKlBZ,GACA,yBAAKE,UAAU,UACb,yBACEC,MAAO,CACLU,MAAO,OACPC,OAAQ,OACRV,gBAAgB,OAAD,OAASH,EAAKM,MAAMQ,mBAApB,KACfC,eAAgB,QAChBC,mBAAoB,gBACpBC,aAAc,WC3BnBC,MA5Bf,YAA4C,IAA3BvB,EAA0B,EAA1BA,GAAImB,EAAsB,EAAtBA,mBACnB,OACE,yBAAKb,UAAU,uBACb,kBAAC,IAAD,CAAMkB,GAAE,WAAMxB,IACZ,yBACEM,UAAU,2BACVC,MAAO,CACLW,OAAQ,IACRV,gBAAgB,OAAD,OAASW,EAAT,KACfC,eAAgB,QAChBE,aAAc,Q,0ICT1B,IAAMG,EAAa1B,YAAH,KASD,aAAO,IAAD,EACOG,YAASuB,GAA3BrB,EADW,EACXA,QAASC,EADE,EACFA,KACjB,OACE,oCACE,yBACEC,UAAU,iBACVC,MAAO,CACLC,gBAAiB,+CAGnB,yBAAKF,UAAU,aACb,yBAAKA,UAAU,+BACb,wBACEA,UAAU,uBACVC,MAAO,CAAEE,aAAc,GAAIC,SAAU,KAFvC,iBAMA,wBAAIJ,UAAU,qCAAd,gCAMN,yBAAKA,UAAU,SACb,yBAAKA,UAAU,aACZF,EACC,yBACEE,UAAU,yDACVC,MAAO,CAAEmB,UAAW,KAEpB,0BAAMpB,UAAU,2BAAhB,YAEAD,EAAKsB,OACP,yBACErB,UAAU,4BACVC,MAAO,CAAEqB,SAAU,WAAYC,KAAM,KAEpCxB,EAAKsB,OAAOG,KAAI,SAAAnB,GAAK,OACpBA,EAAMQ,mBACJ,kBAAC,EAAD,eAAOY,IAAKpB,EAAMX,IAAQW,IACxB,SAGN,SC5CCqB,MATf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,OAAOC,UAAWE,MCF1CC,IAASC,OACP,kBAAC,IAAD,CAAgB5C,OAAQA,GACtB,kBAAC,EAAD,OAEF6C,SAASC,eAAe,W","file":"static/js/main.4a55e796.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://movieql.now.sh\"\n});\n\nexport default client;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_MOVIE = gql`\n  query Movie($id: Int!) {\n    movie(id: $id) {\n      id\n      title\n      rating\n      description_intro\n      language\n      medium_cover_image\n      genres\n    }\n  }\n`;\n\nexport default () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, { variables: { id } });\n  return (\n    <div\n      className=\"hero is-fullheight\"\n      style={{\n        backgroundImage: \"linear-gradient(-95deg , #FE7236, #D754AD)\"\n      }}\n    >\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns is-vcentered\">\n            <div className=\"column is-two-thirds\">\n              <h1\n                className=\"title has-text-white\"\n                style={{ marginBottom: 40, fontSize: 60 }}\n              >\n                {loading ? \"Loading...\" : data.movie.title}\n              </h1>\n              {!loading && (\n                <div>\n                  <h2 className=\"subtitle has-text-white is-size-3\">\n                    {data.movie.language} · {data.movie.rating}⭐️\n                  </h2>\n                  <h4 class=\"subtitle has-text-white is-size-4 column is-paddingless is-half\">\n                    {data.movie.description_intro}\n                  </h4>\n                </div>\n              )}\n            </div>\n            {!loading && (\n              <div className=\"column\">\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"75vh\",\n                    backgroundImage: `url(${data.movie.medium_cover_image})`,\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center center\",\n                    borderRadius: 7\n                  }}\n                ></div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction Movie({ id, medium_cover_image }) {\n  return (\n    <div className=\"column is-one-fifth\">\n      <Link to={`/${id}`}>\n        <div\n          className=\"has-background-dark card\"\n          style={{\n            height: 350,\n            backgroundImage: `url(${medium_cover_image})`,\n            backgroundSize: \"cover\",\n            borderRadius: 5\n          }}\n        ></div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  rating: PropTypes.number,\n  description_intro: PropTypes.string,\n  language: PropTypes.string,\n  medium_cover_image: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default Movie;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Movie from \"../components/Movie\";\n\nconst GET_MOVIES = gql`\n  {\n    movies {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nexport default () => {\n  const { loading, data } = useQuery(GET_MOVIES);\n  return (\n    <>\n      <div\n        className=\"hero is-medium\"\n        style={{\n          backgroundImage: \"linear-gradient(-95deg , #FE7236, #D754AD)\"\n        }}\n      >\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1\n              className=\"title has-text-white\"\n              style={{ marginBottom: 40, fontSize: 60 }}\n            >\n              Apollo Movies\n            </h1>\n            <h2 className=\"subtitle has-text-white is-size-3\">\n              I love Apollo and GraphQL\n            </h2>\n          </div>\n        </div>\n      </div>\n      <div className=\"level\">\n        <div className=\"container\">\n          {loading ? (\n            <div\n              className=\"column is-half is-offset-one-quarter has-text-centered\"\n              style={{ marginTop: 20 }}\n            >\n              <span className=\"has-text-grey is-size-5\">Loading</span>\n            </div>\n          ) : data.movies ? (\n            <div\n              className=\"columns is-multiline is-6\"\n              style={{ position: \"relative\", top: -50 }}\n            >\n              {data.movies.map(movie =>\n                movie.medium_cover_image ? (\n                  <Movie key={movie.id} {...movie} />\n                ) : null\n              )}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Detail from \"../routes/Detail\";\nimport Home from \"../routes/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/:id\" component={Detail} />\n    </Router>\n  );\n}\n\nexport default App;\n","import \"bulma\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport client from \"./apollo\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}